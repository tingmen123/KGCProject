<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ddw.dao.DebtMapper">
  <resultMap id="BaseResultMap" type="com.ddw.pojo.Debt">
    <result column="totaldebt" jdbcType="DOUBLE" property="totaldebt" />
    <result column="debtdatetime" jdbcType="TIMESTAMP" property="debtdatetime" />
    <result column="debtperiod" jdbcType="INTEGER" property="debtperiod" />
    <result column="interestid" jdbcType="INTEGER" property="interestid" />
    <result column="confirmerid" jdbcType="CHAR" property="confirmerid" />
    <result column="uid" jdbcType="CHAR" property="uid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    totaldebt, debtdatetime, debtperiod, interestid, confirmerid, uid
  </sql>
  <select id="selectByExample" parameterType="com.ddw.pojo.DebtExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from debt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.ddw.pojo.DebtExample">
    delete from debt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ddw.pojo.Debt">
    insert into debt (totaldebt, debtdatetime, debtperiod, 
      interestid, confirmerid, uid
      )
    values (#{totaldebt,jdbcType=DOUBLE}, #{debtdatetime,jdbcType=TIMESTAMP}, #{debtperiod,jdbcType=INTEGER}, 
      #{interestid,jdbcType=INTEGER}, #{confirmerid,jdbcType=CHAR}, #{uid,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ddw.pojo.Debt">
    insert into debt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="totaldebt != null">
        totaldebt,
      </if>
      <if test="debtdatetime != null">
        debtdatetime,
      </if>
      <if test="debtperiod != null">
        debtperiod,
      </if>
      <if test="interestid != null">
        interestid,
      </if>
      <if test="confirmerid != null">
        confirmerid,
      </if>
      <if test="uid != null">
        uid,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="totaldebt != null">
        #{totaldebt,jdbcType=DOUBLE},
      </if>
      <if test="debtdatetime != null">
        #{debtdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="debtperiod != null">
        #{debtperiod,jdbcType=INTEGER},
      </if>
      <if test="interestid != null">
        #{interestid,jdbcType=INTEGER},
      </if>
      <if test="confirmerid != null">
        #{confirmerid,jdbcType=CHAR},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ddw.pojo.DebtExample" resultType="java.lang.Long">
    select count(*) from debt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update debt
    <set>
      <if test="record.totaldebt != null">
        totaldebt = #{record.totaldebt,jdbcType=DOUBLE},
      </if>
      <if test="record.debtdatetime != null">
        debtdatetime = #{record.debtdatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.debtperiod != null">
        debtperiod = #{record.debtperiod,jdbcType=INTEGER},
      </if>
      <if test="record.interestid != null">
        interestid = #{record.interestid,jdbcType=INTEGER},
      </if>
      <if test="record.confirmerid != null">
        confirmerid = #{record.confirmerid,jdbcType=CHAR},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update debt
    set totaldebt = #{record.totaldebt,jdbcType=DOUBLE},
      debtdatetime = #{record.debtdatetime,jdbcType=TIMESTAMP},
      debtperiod = #{record.debtperiod,jdbcType=INTEGER},
      interestid = #{record.interestid,jdbcType=INTEGER},
      confirmerid = #{record.confirmerid,jdbcType=CHAR},
      uid = #{record.uid,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>